plugins {
	id 'net.minecraftforge.gradle' version '6.+'
	id 'idea'
	id "maven-publish"
	id "org.parchmentmc.librarian.forgegradle" version "1.+"
}

version = "1.0.0"
group = "com.thedarkcolour.gendustry"
base.archivesName = "gendustry-$minecraftVersion"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
	mappings channel: 'parchment', version: "$mappingsVersion-$minecraftVersion"

	//copyIdeResources = true

	runs {
		configureEach {
			workingDirectory project.file("run")

			property "forge.logging.console.level", "debug"
			property "fml.earlyprogresswindow", "false"

			// See https://github.com/Vazkii/Patchouli#mixin-troubleshooting
			property "mixin.env.remapRefMap", "true"
			property "mixin.env.refMapRemappingFile", "$projectDir/build/createSrgToMcp/output.srg"

			mods {
				forestry {
					source sourceSets.main
				}
			}
		}

		client {}

		server {
			workingDirectory project.file("run/server")
		}

		data {
			args "--mod", "forestry", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
		}
	}
}

repositories {
	maven {
		name = "JEI"
		url = "https://dvs1.progwml6.com/files/maven"
		content { includeGroup "mezz.jei" }
	}
	maven {
		name = "Patchouli"
		url = "https://maven.blamejared.com/"
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		forRepositories(fg.repository) // Only add this if you're using ForgeGradle, otherwise remove this line
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:$minecraftVersion-$forgeVersion"

	compileOnly fg.deobf("mezz.jei:jei-$minecraftVersion-common-api:$jeiVersion")
	compileOnly fg.deobf("mezz.jei:jei-$minecraftVersion-forge-api:$jeiVersion")
	runtimeOnly fg.deobf("mezz.jei:jei-$minecraftVersion-forge:$jeiVersion")

	compileOnly fg.deobf("vazkii.patchouli:Patchouli:$patchouliVersion:api")
	runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:$patchouliVersion")

	implementation fg.deobf("maven.modrinth:forestry-community-edition:1.0.14")

	runtimeOnly fg.deobf("curse.maven:spit-it-out-857141:4888738")
	runtimeOnly fg.deobf("curse.maven:cyanide-541676:4126944")
}

def replaceProperties = [
		"version"              : project.version,
		"forgeVersionRange"    : forgeVersionRange,
		"jeiVersionRange"      : jeiVersionRange,
		"patchouliVersionRange": patchouliVersionRange,
		"fmlVersionRange"      : fmlVersionRange,
]

processResources {
	inputs.properties replaceProperties
	replaceProperties.put 'project', project

	filesMatching(['META-INF/mods.toml']) {
		expand replaceProperties
	}
}

jar {
	finalizedBy "reobfJar"

	// Exclude old photoshop files
	exclude "**/*.psd"
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

idea {
	module {
		downloadSources = true
		downloadJavadoc = true
	}
}